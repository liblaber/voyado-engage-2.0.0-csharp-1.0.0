// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using VoyadoEngage.Json;

namespace VoyadoEngage.Models;

public record ContactSearchResult(
    [property:
        JsonPropertyName("firstName"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? FirstName = null,
    [property:
        JsonPropertyName("lastName"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? LastName = null,
    [property:
        JsonPropertyName("careOf"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? CareOf = null,
    [property:
        JsonPropertyName("street"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Street = null,
    [property:
        JsonPropertyName("zipCode"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ZipCode = null,
    [property:
        JsonPropertyName("city"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? City = null,
    [property:
        JsonPropertyName("birthDay"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? BirthDay = null,
    [property:
        JsonPropertyName("status"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Status = null,
    [property:
        JsonPropertyName("country"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Country = null,
    [property:
        JsonPropertyName("phoneNumber"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? PhoneNumber = null,
    [property:
        JsonPropertyName("mobilePhoneNumber"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? MobilePhoneNumber = null,
    [property:
        JsonPropertyName("gender"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Gender = null,
    [property:
        JsonPropertyName("searchKey"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ContactSearchResult.SearchKey? SearchKey_ = null,
    [property:
        JsonPropertyName("unregisteredFromOnlineRegisterInformation"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        UnregisteredFromOnlineRegisterInformation? UnregisteredFromOnlineRegisterInformation = null
)
{
    public record SearchKey : ValueEnum<string>
    {
        internal SearchKey(string value)
            : base(value) { }

        public SearchKey()
            : base("MobilePhone") { }

        public static SearchKey MobilePhone = new("MobilePhone");
        public static SearchKey SocialSecurityNumber = new("SocialSecurityNumber");
    }
}
