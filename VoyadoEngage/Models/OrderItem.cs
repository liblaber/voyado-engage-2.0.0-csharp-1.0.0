// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using VoyadoEngage.Json;

namespace VoyadoEngage.Models;

public record OrderItem(
    [property: JsonPropertyName("type")] OrderItem.OrderItemType Type_,
    [property: JsonPropertyName("sku")] string Sku,
    [property: JsonPropertyName("quantity")] double Quantity,
    [property: JsonPropertyName("grossPaidPrice")] double GrossPaidPrice,
    [property: JsonPropertyName("description")] string Description,
    [property:
        JsonPropertyName("grossPaidPricePerUnit"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? GrossPaidPricePerUnit = null,
    [property:
        JsonPropertyName("taxAmount"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? TaxAmount = null,
    [property:
        JsonPropertyName("taxPercent"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? TaxPercent = null,
    [property:
        JsonPropertyName("imageUrl"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ImageUrl = null,
    [property:
        JsonPropertyName("targetUrl"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? TargetUrl = null,
    [property:
        JsonPropertyName("extraData"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        object? ExtraData = null,
    [property:
        JsonPropertyName("totalDiscount"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? TotalDiscount = null,
    [property:
        JsonPropertyName("originalPrice"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? OriginalPrice = null,
    [property:
        JsonPropertyName("originalPricePerUnit"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? OriginalPricePerUnit = null,
    [property:
        JsonPropertyName("discounts"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<OrderItemDiscount>? Discounts = null,
    [property:
        JsonPropertyName("discounted"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? Discounted = null
)
{
    public record OrderItemType : ValueEnum<string>
    {
        internal OrderItemType(string value)
            : base(value) { }

        public OrderItemType()
            : base("PURCHASE") { }

        public static OrderItemType Purchase = new("PURCHASE");
        public static OrderItemType Return_ = new("RETURN");
    }
}
