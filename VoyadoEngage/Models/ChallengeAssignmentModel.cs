// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using VoyadoEngage.Json;

namespace VoyadoEngage.Models;

public record ChallengeAssignmentModel(
    [property:
        JsonPropertyName("challengeCompletedOn"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ChallengeCompletedOn = null,
    [property:
        JsonPropertyName("challengeEnd"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ChallengeEnd = null,
    [property:
        JsonPropertyName("challengeId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ChallengeId = null,
    [property:
        JsonPropertyName("challengeStart"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ChallengeStart = null,
    [property:
        JsonPropertyName("completedCheckpoints"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? CompletedCheckpoints = null,
    [property:
        JsonPropertyName("imageUrl"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ImageUrl = null,
    [property:
        JsonPropertyName("contactId"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ContactId = null,
    [property: JsonPropertyName("id"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        string? Id = null,
    [property:
        JsonPropertyName("isActive"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? IsActive = null,
    [property:
        JsonPropertyName("isChallengeCompleted"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? IsChallengeCompleted = null,
    [property:
        JsonPropertyName("latestCheckpointAddedOn"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? LatestCheckpointAddedOn = null,
    [property:
        JsonPropertyName("requiredCheckpoints"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? RequiredCheckpoints = null,
    [property:
        JsonPropertyName("status"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ChallengeAssignmentModel.ChallengeAssignmentModelStatus? Status = null,
    [property:
        JsonPropertyName("links"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<IHypermediaLink>? Links = null
)
{
    public record ChallengeAssignmentModelStatus : ValueEnum<string>
    {
        internal ChallengeAssignmentModelStatus(string value)
            : base(value) { }

        public ChallengeAssignmentModelStatus()
            : base("Unknown") { }

        public static ChallengeAssignmentModelStatus Unknown = new("Unknown");
        public static ChallengeAssignmentModelStatus Completed = new("Completed");
        public static ChallengeAssignmentModelStatus NotCompleted = new("NotCompleted");
        public static ChallengeAssignmentModelStatus Active = new("Active");
    }
}
