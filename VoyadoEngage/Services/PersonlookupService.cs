// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using VoyadoEngage.Http;
using VoyadoEngage.Http.Serialization;
using VoyadoEngage.Models;

namespace VoyadoEngage.Services;

public class PersonlookupService : BaseService
{
    internal PersonlookupService(HttpClient httpClient)
        : base(httpClient) { }

    /// <param name="socialSecurityNumber">String that contains social security number</param>
    /// <param name="phoneNumber">String that contains mobile phone number</param>
    /// <param name="countryCode">Country where the contact is registered</param>
    public async Task<ContactSearchResult> PersonLookupGetPersonLookupAsync(
        string? socialSecurityNumber = null,
        string? phoneNumber = null,
        string? countryCode = null,
        CancellationToken cancellationToken = default
    )
    {
        var request = new RequestBuilder(HttpMethod.Get, "api/v2/personlookup/getpersonlookup")
            .SetOptionalQueryParameter("socialSecurityNumber", socialSecurityNumber)
            .SetOptionalQueryParameter("phoneNumber", phoneNumber)
            .SetOptionalQueryParameter("countryCode", countryCode)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);
        response.EnsureSuccessStatusCode();

        return await response
                .Content.ReadFromJsonAsync<ContactSearchResult>(
                    _jsonSerializerOptions,
                    cancellationToken
                )
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
