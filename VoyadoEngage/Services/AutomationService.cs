// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using VoyadoEngage.Http;
using VoyadoEngage.Http.Exceptions;
using VoyadoEngage.Http.Extensions;
using VoyadoEngage.Http.Serialization;

namespace VoyadoEngage.Services;

public class AutomationService : BaseService
{
    internal AutomationService(HttpClient httpClient)
        : base(httpClient) { }

    public async Task<object> CustomTriggersTriggerByContactIdAsync(
        object input,
        string triggerId,
        string contactId,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(input, nameof(input));
        ArgumentNullException.ThrowIfNull(triggerId, nameof(triggerId));
        ArgumentNullException.ThrowIfNull(contactId, nameof(contactId));

        var request = new RequestBuilder(
            HttpMethod.Post,
            "api/v2/automation/customTriggers/{triggerId}/triggerByContactId/{contactId}"
        )
            .SetPathParameter("triggerId", triggerId)
            .SetPathParameter("contactId", contactId)
            .SetContentAsJson(input, _jsonSerializerOptions)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    public async Task<object> CustomTriggersTriggerBySocialSecurityNumberAsync(
        object input,
        string triggerId,
        string ssn,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(input, nameof(input));
        ArgumentNullException.ThrowIfNull(triggerId, nameof(triggerId));
        ArgumentNullException.ThrowIfNull(ssn, nameof(ssn));

        var request = new RequestBuilder(
            HttpMethod.Post,
            "api/v2/automation/customTriggers/{triggerId}/triggerBySocialSecurityNumber/{ssn}"
        )
            .SetPathParameter("triggerId", triggerId)
            .SetPathParameter("ssn", ssn)
            .SetContentAsJson(input, _jsonSerializerOptions)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    public async Task<object> CustomTriggersTriggerByExternalContactIdAsync(
        object input,
        string triggerId,
        string externalId,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(input, nameof(input));
        ArgumentNullException.ThrowIfNull(triggerId, nameof(triggerId));
        ArgumentNullException.ThrowIfNull(externalId, nameof(externalId));

        var request = new RequestBuilder(
            HttpMethod.Post,
            "api/v2/automation/customTriggers/{triggerId}/triggerByExternalContactId/{externalId}"
        )
            .SetPathParameter("triggerId", triggerId)
            .SetPathParameter("externalId", externalId)
            .SetContentAsJson(input, _jsonSerializerOptions)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    public async Task<object> CustomTriggersTriggerByContactTypeAndKeyAsync(
        object input,
        string triggerId,
        string contactType,
        string keyValue,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(input, nameof(input));
        ArgumentNullException.ThrowIfNull(triggerId, nameof(triggerId));
        ArgumentNullException.ThrowIfNull(contactType, nameof(contactType));
        ArgumentNullException.ThrowIfNull(keyValue, nameof(keyValue));

        var request = new RequestBuilder(
            HttpMethod.Post,
            "api/v2/automation/customTriggers/{triggerId}/triggerByContactTypeAndKey/{contactType}/{keyValue}"
        )
            .SetPathParameter("triggerId", triggerId)
            .SetPathParameter("contactType", contactType)
            .SetPathParameter("keyValue", keyValue)
            .SetContentAsJson(input, _jsonSerializerOptions)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);

        return await response
                .EnsureSuccessfulResponse()
                .Content.ReadFromJsonAsync<object>(_jsonSerializerOptions, cancellationToken)
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
